パッケージに属したクラスの実行方法

・java 起動したいクラスの完全限定クラス名（FOQN）
・クラスパスの指定
・クラスファイルを正しく配置させる

Javaコマンドの正確な構文
 java 起動したいクラスの完全限定クラス名（FOQN）
例）　コマンド　java calcapp.main.Calc

クラスパス
　JVMが内部に持っているクラスローダーという機構により、クラスファイルをPC内から検索し
　JVCに読み込んで利用可能にする役割をしている。
　このPC内の検索について　クラスパス　というヒント情報を使うことで高速に探すことが可能になっている。
  クラスパスとはクラスローダーがファイルを探す時に見にいくフォルダの場所で予め１つ以上を指定しておく。

クラスパスの指定方法
　１ 起動時にjavaコマンドで指定する。
  　　JVM起動時に-cpオプション、-classpathオプションで指定する
  　　例）　java -cp c:¥work Calc
　2 検索場所をOSに登録しておく
    　環境変数を用いて設定。OSごとに設定異なる。
　3 特に指定しない
　  　1、２どちらもない場合、javaコマンドが実行されたフォルダがクラスパスとなる。

クラスパスで指定できる対象
　1　フォルダの場所
　2　クラスファイルが入ったJAR、ZIPファイル
　3　複数フォルダ、JAR/ZIPファイル、それらの組み合わせ

クラスファイルの正しい配置
　パッケージに属したクラスファイルをクラスローダーに読み込んでもらうには現在のクラスパスを基準として
　パッケージ階層を作り、その中に必要なクラスファイルを配置しておく必要がある。
　例）　work(クラスパス)ー calcapp - main
                            　　- logics


プログラム実行の順序
①JVMは起動させるクラス名を受け取る
②クラスローダーはクラスパスを確認する。
③JVMはクラスローダーに対してクラス名を読み込むよう指示する。
④クラスローダーはクラスパスを基準としてフォルダを降りていきクラスファイルを発見する
⑤クラスローダーは発見したクラスファイルを実行する
⑥JVMは読み込んだクラスファイルのmainメソッドを実行する


javacとjavaコマンドの引数
・javacはどのソースファイルをコンパイルするかファイル名で指定
・javaはどのクラスのどのmainメソッドを起動するかクラス名（FOQN)で指定
