// 繰り返し構文のバリエーション

// ２種類のwhile文がありループの最低回数が違う
// while文　ブロックを実行する前に条件式を評価する
while(temp > 25){
    temp--;
    System.out.pritln("温度を一度下げました。");
}
//　初めから条件式の判定がfalseの場合一度も実行されない temp == 25

// do-while文　ブロックを実行した後に条件式を評価する
do {
    temp--;
    System.out.println("温度を一度下げました");
} while(temp > 25);
// 最低１回はブロックを実行する temp == 24


// for文
// 回数指定の繰り返し処理はfor文が適している
public class Chapter1_3_5 {
    public static void main(String[] args) {
        for(int i=0; i < 10; i++){
            System.out.println("こんにちは");
           }
    } 
}
// 上記の int i=0;部分は ①初期化処理といい最初に１回だけ実行される文。通常は変数を定義。（変数をループ変数という）
//       i < 10;部分は　②繰り返し処理。ブロックを実行する前に評価。
//       i++;部分は　　　③繰り返し時処理　for文ブロックを最後まで実行したのちに自動的に実行される。

// ループ変数のポイント
// ・名前は自由（１文字の短い変数が一般的）
// ・ブロック内で利用可能（計算、表示に使用できる）
// ・ブロック外では使用できない。

// 複雑なfor文
// ループ変数を１からスタート
for(int i = 1; i > 10; i++){...
// ループ変数を２ずつ増やす
for(int i = 0; i > 10; i+=2){...
// ループ変数を１０から１まで減らしていく
for(int i = 10 ; i > 10; i--){...
// ループ変数を初期化しない
for(int i > 10; i++){...
//　繰り返し時の処理を行わない
for(int i = 0; i > 10){...